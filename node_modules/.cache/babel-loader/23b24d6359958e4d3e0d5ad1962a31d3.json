{"ast":null,"code":"import _classCallCheck from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/martin/Desktop/reduxlearn/reduxexpenses/src/components/Info.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar Info =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Info, _Component);\n\n  function Info() {\n    _classCallCheck(this, Info);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Info).apply(this, arguments));\n  }\n\n  _createClass(Info, [{\n    key: \"render\",\n    value: function render() {\n      var initialValue = 0;\n      var sumIncomes = this.props.incomes.reduce(function (accumulator, currentValue) {\n        return accumulator + currentValue.amount;\n      }, initialValue);\n      var initial = 0;\n      var sumExpenses = this.props.posts.reduce(function (accumulator, currentValue) {\n        return accumulator + currentValue.amount;\n      }, initial);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Total summery of expenses and incomes:\"), \"The total amount of all incomes: \", sumIncomes, \"The total amount of all expenses: \", sumExpenses);\n    }\n  }]);\n\n  return Info;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    incomes: state.incomes,\n    posts: state.posts\n  };\n};\n\nexport default connect(mapStateToProps)(Info);","map":{"version":3,"sources":["/Users/martin/Desktop/reduxlearn/reduxexpenses/src/components/Info.js"],"names":["React","Component","connect","Info","initialValue","sumIncomes","props","incomes","reduce","accumulator","currentValue","amount","initial","sumExpenses","posts","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEOC,I;;;;;;;;;;;;;6BAEI;AAEP,UAAIC,YAAY,GAAG,CAAnB;AACA,UAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,CAA0B,UAAUC,WAAV,EAAuBC,YAAvB,EAAqC;AAChF,eAAOD,WAAW,GAAGC,YAAY,CAACC,MAAlC;AACD,OAFkB,EAEhBP,YAFgB,CAAnB;AAGA,UAAIQ,OAAO,GAAG,CAAd;AACA,UAAMC,WAAW,GAAG,KAAKP,KAAL,CAAWQ,KAAX,CAAiBN,MAAjB,CAAwB,UAAUC,WAAV,EAAuBC,YAAvB,EAAqC;AAC/E,eAAOD,WAAW,GAAGC,YAAY,CAACC,MAAlC;AACD,OAFmB,EAEjBC,OAFiB,CAApB;AAKA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADD,uCAEoCP,UAFpC,wCAGqCQ,WAHrC,CADF;AAOD;;;;EArBiBZ,S;;AAuBpB,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLT,IAAAA,OAAO,EAAES,KAAK,CAACT,OADV;AAELO,IAAAA,KAAK,EAACE,KAAK,CAACF;AAFP,GAAP;AAID,CALD;;AAOA,eAAeZ,OAAO,CAACa,eAAD,CAAP,CAAyBZ,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n class Info extends Component {\n \n  render() {\n\n    let initialValue = 0;\n    const sumIncomes = this.props.incomes.reduce(function (accumulator, currentValue) {\n      return accumulator + currentValue.amount;\n    }, initialValue)\n    let initial = 0;\n    const sumExpenses = this.props.posts.reduce(function (accumulator, currentValue) {\n      return accumulator + currentValue.amount;\n    }, initial)\n\n \n    return (\n      <div>\n       <h1>Total summery of expenses and incomes:</h1>\n        The total amount of all incomes: {sumIncomes}\n        The total amount of all expenses: {sumExpenses}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    incomes: state.incomes,\n    posts:state.posts\n  }\n}\n\nexport default connect(mapStateToProps)(Info)\n"]},"metadata":{},"sourceType":"module"}