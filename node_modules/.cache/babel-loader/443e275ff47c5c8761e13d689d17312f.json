{"ast":null,"code":"import _defineProperty from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/reduxlearn/reduxexpenses/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/martin/Desktop/reduxlearn/reduxexpenses/src/components/NewPost.js\";\nimport React, { Component } from 'react';\n\nvar NewPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewPost, _Component);\n\n  function NewPost() {\n    var _this;\n\n    _classCallCheck(this, NewPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPost).call(this));\n\n    _this.handleInputChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.Validate = function () {\n      var titleError = '';\n      var categoryError = '';\n      var amountError = '';\n\n      if (!_this.state.title || _this.state.title.length < 3) {\n        titleError = 'minimum 3 characters';\n      }\n\n      if (!_this.state.category || _this.state.category.length < 3) {\n        categoryError = 'minimum 3 characters';\n      }\n\n      if (!_this.state.amount || Number.isInteger(_this.state.amount)) {\n        amountError = 'only integers';\n      }\n\n      if (titleError || categoryError || amountError) {\n        _this.setState({\n          titleError: titleError,\n          categoryError: categoryError,\n          amountError: amountError\n        });\n\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.Validate) {\n        if (_this.state.title.trim() && _this.state.category.trim() && _this.state.amount.trim()) {\n          _this.props.onAddPost(_this.state);\n\n          _this.handleReset();\n        }\n      } else {\n        console.log('Not valid properties');\n      }\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        title: '',\n        category: '',\n        amount: ''\n      });\n    };\n\n    _this.state = {\n      title: '',\n      category: '',\n      amount: '',\n      titleError: '',\n      categoryError: '',\n      amountError: ''\n    };\n    return _this;\n  }\n\n  _createClass(NewPost, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"formExpenses\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        className: \"form-control\",\n        name: \"title\",\n        onChange: this.handleInputChange,\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"category\",\n        className: \"form-control\",\n        name: \"category\",\n        onChange: this.handleInputChange,\n        value: this.state.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"errorMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), this.state.categoryError), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Amount\",\n        className: \"form-control\",\n        name: \"amount\",\n        onChange: this.handleInputChange,\n        value: this.state.amount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn-save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Add Post\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn-save\",\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Reset\"))));\n    }\n  }]);\n\n  return NewPost;\n}(Component);\n\nexport { NewPost as default };","map":{"version":3,"sources":["/Users/martin/Desktop/reduxlearn/reduxexpenses/src/components/NewPost.js"],"names":["React","Component","NewPost","handleInputChange","e","setState","target","name","value","Validate","titleError","categoryError","amountError","state","title","length","category","amount","Number","isInteger","handleSubmit","preventDefault","trim","props","onAddPost","handleReset","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class NewPost extends Component {\n    constructor() {\n        super()\n        this.state = {\n            title: '',\n            category: '',\n            amount: '',\n\n            titleError:'',\n            categoryError:'',\n            amountError:''\n        }\n    }\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    Validate = () => {\n        let titleError=''\n           let categoryError=''\n           let amountError=''\n       \n        if(!this.state.title || this.state.title.length<3){\n        titleError = 'minimum 3 characters'\n        }\n        if (!this.state.category || this.state.category.length < 3) {\n            categoryError = 'minimum 3 characters'\n        }\n        if (!this.state.amount || Number.isInteger(this.state.amount)) {\n            amountError = 'only integers'\n        }\n        if(titleError ||categoryError ||amountError){\n            this.setState({\n                titleError,\n                categoryError,\n                amountError\n            })\n            return false\n        } else{\n            return true\n        }\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n       if(this.Validate){\n        if (this.state.title.trim() && this.state.category.trim() && this.state.amount.trim()) {\n            this.props.onAddPost(this.state);\n            this.handleReset();\n        }\n    }else{\n        console.log('Not valid properties')\n    }\n    }\n    handleReset = () =>{\n        this.setState({\n            title:'',\n            category:'',\n            amount:''\n        })\n    }\n\n  render() {\n    return (\n      <div>\n            <form onSubmit={this.handleSubmit} className='formExpenses'>\n                <div className=\"form-group\">\n            <input type='text'\n                        placeholder=\"Title\"\n                       \n                        className=\"form-control\"\n                        name=\"title\"\n                        onChange={this.handleInputChange}\n                        value={this.state.title}\n                    />\n        </div>\n                <div className=\"form-group\">\n                    <input type='text'\n                        placeholder=\"category\"\n                        \n                        className=\"form-control\"\n                        name=\"category\"\n                        onChange={this.handleInputChange}\n                        value={this.state.category}\n                    />\n                </div>\n                <div className='errorMessage'><div></div>{this.state.categoryError}</div>\n                <div className=\"form-group\">\n                    <input type='text'\n                        placeholder=\"Amount\"\n                        className=\"form-control\"\n                        name=\"amount\"\n                        onChange={this.handleInputChange}\n                        value={this.state.amount}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn-save\">Add Post</button>\n                    <button type=\"button\" className=\"btn-save\" onClick={this.handleReset}>\n                        Reset\n            </button>\n                </div>\n      </form>\n        \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}